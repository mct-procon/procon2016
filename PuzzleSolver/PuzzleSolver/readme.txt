srcResearch3 -> 最新のソルバです。主に, 高専プロコンのパズルを解くものです。

ちなみに、このディレクトリにあるプログラムもsrcResearch3と同じです。

Dxライブラリで作りました。visual studio 2010でも多分動きますが、2015推奨です。
高速な動作を必要とするため, Releaseモードで実行してください。



--------------------------------操作----------------------------------

Esc  …次の問題へ進む（最後まで行くと終了）
ウィンドウ右上の×ボタンで終了

[各問題]
Enter…		1手進める
Backspace…	1手戻す
Space…		情報の表示／非表示切り替え


マウス左ドラッグ…	表示移動
マウス中回転…  	拡大／縮小
マウス中ドラッグ…	ピース移動

Sキー…回答出力（answer.txt）
Wキー…問題の書き換え（非推奨！）

（マウス左クリックで、辺を選択することで、手動で解くこともできます。）



------------------------------メンテナンス-----------------------------------

・問題によって書き換えたいもの
SolverBase.cppのinput()関数にて、「誤差パラメータの設定」と書いてあるところに

dist_error_meter
dist_error_waku_meter
pixel_per_meter

というパラメータがあるので、実物パズルを解く際は値を変更してください。上から3つ目はあまり変えない方がよさそう。

それぞれの意味
dist_error_meter      … ピースの頂点座標が（原寸大で）最大何ミリメートルくらいずれているか？
dist_error_waku_meter … 枠穴の頂点座標が（原寸大で）最大何ミリメートルくらいずれているか？
pixel_per_meter       … 1メートルのものを撮り込むと, 何ピクセルになるか？

実物パズルを解くときは、それぞれ、1.200, 2.000, 1メートル当たりのピクセル数
くらいにするのがおすすめ。それ以外は、0.500, 1.000, 20000/2.54とか…。
値を小さくするほど、誤差に対して厳しくなります。



・問題によって書き換えたいもの２
Main.cppのfnameListに問題名をpush_backすると、pushした問題を解くことができます。



---------------------------------アルゴリズム--------------------------------

【簡単な概要】
多角形パズルを解くソルバです。人間の解き方を参考にしました。

以下のステップを繰り返します。
①２辺の結合を全て試し, 各々について結合度を計算。
②結合度最大の組み合わせを選択。
③選択した結合方法で２多角形をマージ。

結合度は、結合した２つの多角形の関係（同じ位置にある頂点の角度和(360°, 180°), 辺の一致数など）から算出しています。
（そのため、同じ長さの辺が多い凸多角形のパズルだと、結合度の値に差が出づらく、完全解答が出にくいです）

①はSolverクラスのmove()関数, ②はSolverクラスのevaluation_line(), evaluation_angle()関数と対応します。
（なお、点座標は複素数で表現し、実数軸を→, 虚数軸を↓にとって表示しています。）


【多角形のマージについて】
基本方針は
・右手法で外周を周る -> 経路から冗長な点を削除 -> 経路を用いて新たな多角形を生成（古いものは頂点数0にする）
です。
ただし、近い距離の頂点をマージしたり、（誤差対策として）多角形を微妙に変形させたりしています。（まれにバグるので注意）


【問題データについて】
NewProblem/フォルダ, Problem/フォルダに入っています。
問題作成用ツールも欲しければUpします。たまに誤動作（実行エラーで壊死）するのでその場合は許してください。



-------------------------------ソースファイル-----------------------------------

プログラム構造(おおまかなやつ)

Main.cpp   … メイン
Extern.cpp … グローバル変数（ピース, 枠, 描画モードなど）, 描画関数

Main.cppのgame_loop()にて, 以下を実行。
①UserQuery user_query (EnterかEscapeを押すまで入力受け付け, Main.cppに宣言)
②Solver solver        (1ステップ実行,                       Extern.cppに宣言）
③Show show            (結果表示・選択,                      Main.cppに宣言）
③は現在やっていません。

UserQuery … UserQuery.h, UserQuery.cpp
Solver    … SolverBase.h, SolverBase.cpp, Solver.h, Solver.cpp
Show      … Show.h

その他のファイルは、Solver用のファイルです。


プログラム構造２（正確なやつ）
(cppファイル, 8個)
・MargePoly  … 多角形マージ用
・Poly       … 多角形
・Line       … 線分
・Extern     … グローバル変数
・Main       … メイン
・UserQuery  … 入力受け付け
・SolverBase … ソルバの基本機能
・Solver     … ソルバの拡張機能

(hファイル, 14個)
stdafx     … 基本インクルード
Point      … 点
Line       … 線分
Poly       … 多角形
MargePoly  … 多角形マージ用
SolverBase … ソルバの基本機能
Solver     … ソルバの拡張機能

SolverParameter … 許容誤差のパラメータを管理する
MoveNode        … 「2辺のくっつけ方, 評価値」を持つ。基本的には構造体。

Backup     … 「1手戻す, 1手進める」で必要なやつ。盤面をスタック形式で保存／取り出し。
Evaluation … 枝刈りでしか使わなかった。ヒストグラム作るやつ。
Extern     … グローバル変数

UserQuery  … ユーザ入力
Show       … 結果表示／選択（現在用いていない）

-----------------------------------------------------------------


実物パズルを解く場合は場合は、スキャナかカメラで画像（jpeg, png）を撮り込み
https://github.com/mct-procon/procon2016/releases/tag/Scanner1001
を用いてデータ化してください。
result.txtにデータができあがるので、それを本プログラムに読み込ませます。
