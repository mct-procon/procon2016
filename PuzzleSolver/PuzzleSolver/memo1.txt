for (辺src = 1, 2, 3, …, N) {
	for (辺dst = 1, 2, 3, …, N) {
		score = get_score(src, dst);
		if (score > 0) scoreList.push_back(score, dst, src);
	}
}

erase (scoreList 辺srcとdstをくっつけてマージできないもの, 上位max_size位より下位);

//同じ評価値scoreが複数ある場合…同じdst値が少ないものを優先
//例
//(score, dst, src)
//(3, 1, 1)
//(3, 1, 2)
//(3, 0, 1)
//(3, 0, 2)
//(3, 0, 3)
//(2, 0, 1)
なら
//(3, 0, 1)
//(3, 0, 2)
//(3, 0, 3)
//(3, 1, 1)
//(3, 1, 2)
//(2, 0, 1)


//欲を言えば…
//同じ(score, dst)を持っていたらくっつけたときに頂点数がより減少するものを優先, とする
